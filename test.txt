def solution(A, D):
    # Initialize balance and monthly_payments
    balance = 0
    monthly_payments = {i: 0 for i in range(1, 13)}

    # Iterate through transactions
    for k in range(len(A)):
        date = D[k][:7]  # Extract month from the date
        amount = A[k]

        # Update balance
        balance += amount

        # Update monthly_payments
        monthly_payments[date] += 1 if amount < 0 else 0
        monthly_payments[date] -= 1 if amount >= 0 else 0

        # Apply fee waiver if applicable
        if amount < 0:
            total_payments = sum(monthly_payments[date] for date in monthly_payments if date == D[k][:7])
            if total_payments >= 3 and abs(amount) >= 100:
                balance += 5

    # Calculate the final balance
    return balance - 5 * 12


    def solution(A, D):
    balance = 0
    monthly_payments = {i: 0 for i in range(1, 13)}

    for i in range(len(A)):
        amount = A[i]
        date = D[i][:7]

        balance = balance + amount

        if amount < 0:
            monthly_payments[date] = monthly_payments[date] + 1
        else:
            monthly_payments[date] = monthly_payments[date] - 1

        if amount < 0 and monthly_payments[date] >= 3 and abs(amount) >= 100:
            balance = balance + 5

    return balance - 5 * 12

print(solution([100, 100, 100, -10], ['2020-12-31', '2020-12-22', '2020-12-03', '2020-12-29']))